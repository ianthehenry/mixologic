.type Ingredient <: symbol
.type Recipe <: symbol

.decl Has(x : Ingredient)
.input Has(filename="bar")

.decl Needs(drink : Recipe, ingredient : Ingredient)
.input Needs(filename="recipes", delimiter=" <- ")

.decl IsRecipe(x : Recipe)
IsRecipe(x) :- Needs(x, _).

.decl IsIngredient(x : Ingredient)
IsIngredient(x) :- Needs(_, x).

.decl Unbuyable(x : Ingredient)
.input Unbuyable(filename="unbuyable")
.input Unbuyable(filename="auto-unbuyable")

.decl Begets(in : Ingredient, out : Ingredient)
.input Begets(filename="begets", delimiter=" -> ")
.input Begets(filename="auto-begets", delimiter=" -> ")

Begets(x, x) :- IsIngredient(x).

Has(out) :- Has(in), Begets(in, out).

.decl Missing(drink : Recipe, ingredient : Ingredient)
Missing(drink, ingredient) :- Needs(drink, ingredient), !Has(ingredient).

.decl Mixable(drink : Recipe)
Mixable(drink) :- IsRecipe(drink), !Missing(drink, _).

.decl Enables(missing : Ingredient, drink : Recipe)
Enables(ingredient, drink) :-
  !Unbuyable(ingredient),
  Missing(drink, out),
  Begets(ingredient, out),
  count : { Missing(drink, _) } =
  count : { Begets(ingredient, product), Missing(drink, product) }
.

// anything that appears in these rules may *only* appear in these rules,
// and thus might not Beget itself otherwise. To be safe, explicitly enumerate
// them. I *think* we can just load this from a file, though.
Begets("sugar", "sugar").

Begets("lime zest", "lime zest").
Begets(flavor, "lime cordial") :- Has(sugar), Begets(sugar, "sugar"), Begets(flavor, "lime zest").
Begets(sugar, "lime cordial") :- Has(flavor), Begets(sugar, "sugar"), Begets(flavor, "lime zest").

Begets("raspberry", "raspberry").
Begets(flavor, "raspberry syrup") :- Has(sugar), Begets(sugar, "sugar"), Begets(flavor, "raspberry").
Begets(sugar, "raspberry syrup") :- Has(flavor), Begets(sugar, "sugar"), Begets(flavor, "raspberry").

Begets("pineapple", "pineapple").
Begets(flavor, "pineapple syrup") :- Has(sugar), Begets(sugar, "sugar"), Begets(flavor, "pineapple").
Begets(sugar, "pineapple syrup") :- Has(flavor), Begets(sugar, "sugar"), Begets(flavor, "pineapple").

Begets("ginger", "ginger").
Begets(flavor, "ginger syrup") :- Has(sugar), Begets(sugar, "sugar"), Begets(flavor, "ginger").
Begets(sugar, "ginger syrup") :- Has(flavor), Begets(sugar, "sugar"), Begets(flavor, "ginger").

Begets("sage", "sage").
Begets(flavor, "sage syrup") :- Has(sugar), Begets(sugar, "sugar"), Begets(flavor, "sage").
Begets(sugar, "sage syrup") :- Has(flavor), Begets(sugar, "sugar"), Begets(flavor, "sage").

Begets("cinnamon sticks", "cinnamon sticks").
Begets(flavor, "cinnamon syrup") :- Has(sugar), Begets(sugar, "sugar"), Begets(flavor, "cinnamon sticks").
Begets(sugar, "cinnamon syrup") :- Has(flavor), Begets(sugar, "sugar"), Begets(flavor, "cinnamon sticks").

.output Mixable(filename="mixable")
.output Enables(filename="shopping-list", delimiter=" -> ")
